renv::status()
renv::snapshot()
renv::status()
compute <- function(n) {
library(palmerpenguins)
library(dplyr)
peng <- penguins %>%
mutate(
species = as.factor(species),
sex = as.factor(sex)
) %>%
sample_n(100)
glm(body_mass_g ~ species + sex, data = peng)
}
library(clustermq)
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:5000, n_jobs = 8)
sessionInfo()
renv::update()
.Last.error.trace
.Last.error
install.package("rstudioapi")
install.packages("rstudioapi")
renv::update()
getwd()
?renv::update()
?renv::update(packages)
install.packages("clustermq")
sessionInfo()
library(clustermq)
sessionInfo()
renv::init()
options()$repos
r<-options()$repos
renv::update()
renv::init()
renv::snapshot()
compute <- function(n) {
library(palmerpenguins)
library(dplyr)
peng <- penguins %>%
mutate(
species = as.factor(species),
sex = as.factor(sex)
) %>%
sample_n(100)
glm(body_mass_g ~ species + sex, data = peng)
}
library(clustermq)
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:5000, n_jobs = 8)
# create new data
new_dat <- tibble::tribble(
~species, ~sex,
"Chinstrap", "male"
# "Chinstrap", "female"
)
new_dat
# create prediction for each of the models
library(furrr)
library(tibble)
preds <- tibble(mass = map_dbl(res, predict, new_dat))
library(tibble)
preds <- tibble(mass = map_dbl(res, predict, new_dat))
# create prediction for each of the models
library(purrr)
library(tibble)
preds <- tibble(mass = map_dbl(res, predict, new_dat))
# plot the result
library(ggplot2)
ggplot(preds, aes(x = mass)) +
geom_histogram() +
ggtitle("Ensemble model prediction of mass of male Chinstrap penguins")
preds <- tibble(mass = map_dbl2(res, predict, new_dat))
preds <- tibble(mass = map(res, predict, new_dat))
# plot the result
library(ggplot2)
ggplot(preds, aes(x = mass)) +
geom_histogram() +
ggtitle("Ensemble model prediction of mass of male Chinstrap penguins")
preds <- tibble(mass = map_dbl(res, predict, new_dat))
# plot the result
library(ggplot2)
ggplot(preds, aes(x = mass)) +
geom_histogram() +
ggtitle("Ensemble model prediction of mass of male Chinstrap penguins")
preds <- tibble(mass = future_map_dbl(res, predict, new_dat))
preds <- tibble(mass = map_dbl(res, predict, new_dat))
# plot the result
library(ggplot2)
ggplot(preds, aes(x = mass)) +
geom_histogram() +
ggtitle("Ensemble model prediction of mass of male Chinstrap penguins")
samples=500
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 8)
# create new data
new_dat <- tibble::tribble(
~species, ~sex,
"Chinstrap", "male"
# "Chinstrap", "female"
)
new_dat
# create prediction for each of the models
library(purrr)
library(tibble)
preds <- tibble(mass = map_dbl(res, predict, new_dat))
# plot the result
library(ggplot2)
ggplot(preds, aes(x = mass)) +
geom_histogram(bins=samples/100) +
ggtitle("Ensemble model prediction of mass of male Chinstrap penguins")
# plot the result
library(ggplot2)
ggplot(preds, aes(x = mass)) +
geom_histogram(bins=samples/10) +
ggtitle("Ensemble model prediction of mass of male Chinstrap penguins")
# plot the result
library(ggplot2)
ggplot(preds, aes(x = mass)) +
geom_histogram(bins=samples/20) +
ggtitle("Ensemble model prediction of mass of male Chinstrap penguins")
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 8,chunk_size=10)
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 8,chunk_size=1)
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 8,chunk_size=100)
samples=5000
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 8,chunk_size=100)
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 8,chunk_size=1)
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 8)
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 8,chunk_size=10)
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 8,chunk_size=100)
# create new data
new_dat <- tibble::tribble(
~species, ~sex,
"Chinstrap", "female"
)
new_dat
# create prediction for each of the models
library(purrr)
library(tibble)
preds <- tibble(mass = map_dbl(res, predict, new_dat))
# plot the result
library(ggplot2)
ggplot(preds, aes(x = mass)) +
geom_histogram(bins=samples/20) +
ggtitle("Ensemble model prediction of mass of male Chinstrap penguins")
ggplot(preds, aes(x = mass)) +
geom_histogram(bins=samples/50) +
ggtitle("Ensemble model prediction of mass of male Chinstrap penguins")
# create new data
new_dat <- tibble::tribble(
~species, ~sex,
"Chinstrap", "male"
)
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 8,chunk_size=10)
samples=1000
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 8,chunk_size=10)
# create new data
new_dat <- tibble::tribble(
~species, ~sex,
"Chinstrap", "male"
)
new_dat
# create prediction for each of the models
library(purrr)
library(tibble)
preds <- tibble(mass = map_dbl(res, predict, new_dat))
# plot the result
library(ggplot2)
ggplot(preds, aes(x = mass)) +
geom_histogram(bins=samples/50) +
ggtitle("Ensemble model prediction of mass of male Chinstrap penguins")
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 50,chunk_size=10)
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 50,chunk_size=1)
samples=1000
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 20,chunk_size=1)
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 20,chunk_size=1)
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 20,chunk_size=10)
# example courtesy of Andrie de Vries (andrie@posit.co)
compute <- function(n) {
library(palmerpenguins)
library(dplyr)
peng <- penguins %>%
mutate(
species = as.factor(species),
sex = as.factor(sex)
) %>%
sample_n(100)
glm(body_mass_g ~ species + sex, data = peng)
}
library(clustermq)
samples=1000
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 20,chunk_size=10)
renv::status()
renv::snapshot()
# example courtesy of Andrie de Vries (andrie@posit.co)
compute <- function(n) {
library(palmerpenguins)
library(dplyr)
peng <- penguins %>%
mutate(
species = as.factor(species),
sex = as.factor(sex)
) %>%
sample_n(100)
glm(body_mass_g ~ species + sex, data = peng)
}
library(clustermq)
samples=1000
# run a big-ish compute job
res <- clustermq::Q(compute, n = 1:samples, n_jobs = 20,chunk_size=10)
# create new data
new_dat <- tibble::tribble(
~species, ~sex,
"Chinstrap", "male"
)
new_dat
# create prediction for each of the models
library(purrr)
library(tibble)
preds <- tibble(mass = map_dbl(res, predict, new_dat))
# plot the result
library(ggplot2)
ggplot(preds, aes(x = mass)) +
geom_histogram(bins=samples/50) +
ggtitle("Ensemble model prediction of mass of male Chinstrap penguins")
